var searchIndex = JSON.parse('{\
"gosub_engine":{"doc":"","t":"AAOAAANDNNNNNNDNNNNNEINNNNLLLLLLLKLLLLLLKLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLAAAAAAAANDDNNNDEEMMMMMLLLLLLLLLLMMMMMMMLLLLLMMMMMMLLLLLMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNDENNNNNNNNNNLLLLLLLLLLLLMLLLLLLLLLLMMLMLLLLLLLLLLLNNEEENDDNNENNNNNLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNHRRDEDIESHHHRNNRRRLLLLLLLLMMLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMMLLLLLMLLLLLLLLLLLLLLLLLLLKLAAAADLLLLLLLLLLLLLLDLLLLLLLLLLLLLDLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDLLALLLLLLLLLDENNLLLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLLLLRRRRRRRDDLLLLLMMMMMMLLLLLMLLMMLLAMMMAMLLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNLLLLLLLLLLLDNNNNNNNNNNNNEIELLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLKLMMMMMMMMMMMMMADRDDDLLLLLLLLLLLLLLLLLMMLLLMLLLMLLLMFFFLLLLLLLFMMLLLLMMMLLLMLLLLLLLLLLLLLLLLENNNGNLLLLLLLLLLLLLL","n":["api","html5_parser","read_char","testing","types","console","Assert","Console","Count","CountReset","Debug","Dir","Dirxml","Error","Group","Group","GroupCollapsed","GroupEnd","Info","Log","LogLevel","Printer","TimeEnd","TimeLog","Trace","Warn","assert","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","count","count_reset","debug","dir","dirxml","end_group","error","fmt","fmt","from","from","from","get_printer","group","group_collapsed","group_end","info","into","into","into","log","new","print","table","time","time_end","time_log","to_string","trace","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","warn","dom","element_class","error_logger","input_stream","node","node_data","parser","tokenizer","Closed","Element","HtmlElement","Manual","Named","Open","ShadowRoot","ShadowRootMode","SlotAssignmentMode","access_key","access_key_label","attributes","attributes","autocapitalize","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class_list","class_list","class_name","class_name","delegates_focus","dir","draggable","from","from","from","from","from","hidden","host","id","id","inner_text","insert","into","into","into","into","into","lang","local_name","local_name","mode","namespace_uri","namespace_uri","outer_text","popover","prefix","prefix","shadow_root","shadow_root","slot","slot","slot_assignment","spellcheck","tag_name","tag_name","title","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ElementClass","add","borrow","borrow_mut","clone","clone_into","contains","default","eq","fmt","from","from_string","into","is_active","is_empty","len","new","remove","set_active","to_owned","toggle","try_from","try_into","type_id","AbruptClosingOfEmptyComment","AbruptDoctypePublicIdentifier","AbruptDoctypeSystemIdentifier","AbsenceOfDigitsInNumericCharacterReference","CdataInHtmlContent","CharacterReferenceOutsideUnicodeRange","ControlCharacterInInputStream","ControlCharacterReference","DuplicateAttribute","EndTagWithAttributes","EndTagWithTrailingSolidus","EofBeforeTagName","EofInCdata","EofInComment","EofInDoctype","EofInScriptHtmlCommentLikeText","EofInTag","ErrorLogger","ExpectedDocTypeButGotChars","ExpectedDocTypeButGotEndTag","ExpectedDocTypeButGotStartTag","IncorrectlyClosedComment","IncorrectlyOpenedComment","InvalidCharacterSequenceAfterDoctypeName","InvalidFirstCharacterOfTagName","MissingAttributeValue","MissingDoctypeName","MissingDoctypePublicIdentifier","MissingDoctypeSystemIdentifier","MissingEndTagName","MissingQuoteBeforeDoctypePublicIdentifier","MissingQuoteBeforeDoctypeSystemIdentifier","MissingSemicolonAfterCharacterReference","MissingWhitespaceAfterDoctypePublicKeyword","MissingWhitespaceAfterDoctypeSystemKeyword","MissingWhitespaceBeforeDoctypeName","MissingWhitespaceBetweenAttributes","MissingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","NestedComment","NonVoidHtmlElementStartTagWithTrailingSolidus","NoncharacterCharacterReference","NoncharacterInInputStream","NullCharacterReference","ParseError","ParserError","SurrogateCharacterReference","SurrogateInInputStream","UnexpectedCharacterAfterDoctypeSystemIdentifier","UnexpectedCharacterInAttributeName","UnexpectedCharacterInUnquotedAttributeValue","UnexpectedEqualsSignBeforeAttributeName","UnexpectedNullCharacter","UnexpectedQuestionMarkInsteadOfTagName","UnexpectedSolidusInTag","UnknownNamedCharacterReference","add_error","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","col","default","eq","fmt","from","from","from","get_errors","into","into","into","line","message","new","offset","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ASCII","Certain","Confidence","Element","Encoding","Eof","InputStream","Position","SeekCur","SeekEnd","SeekMode","SeekSet","Surrogate","Tentative","UTF8","Utf8","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","col","confidence","default","detect_encoding","encoding","eof","eq","eq","eq","eq","fmt","fmt","fmt","fmt","force_set_encoding","from","from","from","from","from","from","get_previous_position","has_read_eof","into","into","into","into","into","into","is_certain_encoding","is_eof","is_surrogate","is_utf8","length","line","new","new","offset","position","read_from_file","read_from_str","reset","seek","set_confidence","set_encoding","tell","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","u32","utf8","Comment","Comment","Document","Document","Element","Element","FORMATTING_HTML_ELEMENTS","HTML_NAMESPACE","MATHML_NAMESPACE","Node","NodeData","NodeId","NodeTrait","NodeType","ROOT_NODE","SPECIAL_HTML_ELEMENTS","SPECIAL_MATHML_ELEMENTS","SPECIAL_SVG_ELEMENTS","SVG_NAMESPACE","Text","Text","XLINK_NAMESPACE","XMLNS_NAMESPACE","XML_NAMESPACE","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","classes","clone","clone","clone","clone_into","clone_into","clone_into","data","default","default","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_named_id","has_named_id","hash","id","into","into","into","into","is_formatting","is_positive","is_root","is_special","matches_tag_and_attrs","name","named_id","namespace","new_comment","new_document","new_element","new_text","next","parent","prev","root","set_named_id","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_of","type_of","comment_data","document_data","element_data","text_data","CommentData","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","to_owned","try_from","try_into","type_id","value","DocumentData","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","to_owned","try_from","try_into","type_id","ElementData","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","name","to_owned","try_from","try_into","type_id","TextData","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","to_owned","try_from","try_into","type_id","value","Html5Parser","borrow","borrow_mut","document","from","get_parse_errors","into","new","parse","run_adoption_agency","try_from","try_into","type_id","Document","DocumentType","HTML","IframeSrcDoc","add_node","append","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","doctype","eq","fmt","fmt","from","from","get_node_by_id","get_node_by_id_mut","get_node_by_named_id","get_node_by_named_id_mut","get_root","into","into","new","print_tree","quirks_mode","relocate","set_node_named_id","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","CHAR_CR","CHAR_FF","CHAR_LF","CHAR_NUL","CHAR_REPLACEMENT","CHAR_SPACE","CHAR_TAB","Options","Tokenizer","borrow","borrow","borrow_mut","borrow_mut","consume_character_reference","consumed","current_attr_name","current_attr_value","current_attrs","current_token","error_logger","from","from","get_consumed_str","get_error_logger","has_consumed_data","initial_state","into","into","last_start_tag","last_start_token","new","next_token","state","state","stream","temporary_buffer","token","token_queue","try_from","try_from","try_into","try_into","type_id","type_id","AfterAttributeNameState","AfterAttributeValueQuotedState","AfterDocTypeNameState","AfterDocTypePublicKeywordState","AfterDocTypeSystemIdentifierState","AfterDocTypeSystemKeywordState","AfterDoctypePublicIdentifierState","AttributeNameState","AttributeValueDoubleQuotedState","AttributeValueSingleQuotedState","AttributeValueUnquotedState","BeforeAttributeNameState","BeforeAttributeValueState","BeforeDocTypeNameState","BeforeDocTypePublicIdentifierState","BeforeDocTypeSystemIdentifierState","BetweenDocTypePublicAndSystemIdentifiersState","BogusCommentState","BogusDocTypeState","CDataSectionBracketState","CDataSectionEndState","CDataSectionState","CharacterReferenceInAttributeValueState","CharacterReferenceInDataState","CharacterReferenceInRcDataState","CommentEndBangState","CommentEndDashState","CommentEndState","CommentLessThanSignBangDashDashState","CommentLessThanSignBangDashState","CommentLessThanSignBangState","CommentLessThanSignState","CommentStartDashState","CommentStartState","CommentState","DataState","DocTypeNameState","DocTypePublicIdentifierDoubleQuotedState","DocTypePublicIdentifierSingleQuotedState","DocTypeState","DocTypeSystemIdentifierDoubleQuotedState","DocTypeSystemIdentifierSingleQuotedState","EndTagOpenState","MarkupDeclarationOpenState","PlaintextState","RawTextEndTagNameState","RawTextEndTagOpenState","RawTextLessThanSignState","RawTextState","RcDataEndTagNameState","RcDataEndTagOpenState","RcDataLessThanSignState","RcDataState","ScriptDataDoubleEscapeEndState","ScriptDataDoubleEscapeStartState","ScriptDataDoubleEscapedDashDashState","ScriptDataDoubleEscapedDashState","ScriptDataDoubleEscapedLessThanSignState","ScriptDataDoubleEscapedState","ScriptDataEndTagNameState","ScriptDataEndTagOpenState","ScriptDataEscapeStartDashState","ScriptDataEscapeStartState","ScriptDataEscapedDashDashState","ScriptDataEscapedDashState","ScriptDataEscapedEndTagNameState","ScriptDataEscapedEndTagOpenState","ScriptDataEscapedLessThanSignState","ScriptDataEscapedState","ScriptDataLessThenSignState","ScriptDataState","SelfClosingStartState","State","TagNameState","TagOpenState","borrow","borrow_mut","clone","clone_into","fmt","from","into","to_owned","try_from","try_into","type_id","Attribute","CommentToken","CommentToken","DocTypeToken","DocTypeToken","EndTagToken","EndTagToken","EofToken","EofToken","StartTagToken","StartTagToken","TextToken","TextToken","Token","TokenTrait","TokenType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","hash","into","into","into","is_empty_or_white","is_eof","is_null","name","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_of","type_of","value","attributes","attributes","force_quirks","is_self_closing","is_self_closing","name","name","name","pub_identifier","sys_identifier","value","value","tokenizer","Error","FIXTURE_ROOT","Root","Test","TokenizerBuilder","assert_valid","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builders","clone","clone","clone","clone_into","clone_into","clone_into","code","col","default","default","default","description","deserialize","deserialize","deserialize","double_escaped","eq","eq","eq","errors","fixture_from_filename","fixture_from_path","fixtures","fmt","fmt","fmt","from","from","from","from","from_utf16_lossy","initial_states","input","into","into","into","into","last_start_tag","line","output","serialize","serialize","serialize","tests","to_owned","to_owned","to_owned","tokenize","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Error","IO","Parse","Request","Result","Utf8","borrow","borrow_mut","fmt","fmt","from","from","from","from","into","source","to_string","try_from","try_into","type_id"],"q":[[0,"gosub_engine"],[5,"gosub_engine::api"],[6,"gosub_engine::api::console"],[74,"gosub_engine::html5_parser"],[82,"gosub_engine::html5_parser::dom"],[164,"gosub_engine::html5_parser::element_class"],[188,"gosub_engine::html5_parser::error_logger"],[281,"gosub_engine::html5_parser::input_stream"],[383,"gosub_engine::html5_parser::node"],[484,"gosub_engine::html5_parser::node_data"],[488,"gosub_engine::html5_parser::node_data::comment_data"],[503,"gosub_engine::html5_parser::node_data::document_data"],[517,"gosub_engine::html5_parser::node_data::element_data"],[532,"gosub_engine::html5_parser::node_data::text_data"],[547,"gosub_engine::html5_parser::parser"],[560,"gosub_engine::html5_parser::parser::document"],[599,"gosub_engine::html5_parser::tokenizer"],[643,"gosub_engine::html5_parser::tokenizer::state"],[729,"gosub_engine::html5_parser::tokenizer::token"],[788,"gosub_engine::html5_parser::tokenizer::token::Token"],[800,"gosub_engine::testing"],[801,"gosub_engine::testing::tokenizer"],[877,"gosub_engine::types"]],"d":["","","","","","","","Console is the main struct that holds all the console …","","","","","","","","","","","","","LogLevel is the type of log level.","","","","","","Emit an assert message if the condition is true","","","","","","","Clears the console output (if possible)","Clears the console output (if possible)","Create a counter named “label”","Reset count of the given label to 0","Emit debug message","Emit a list of properties of the given item","","Notify the printer that the current group has ended","Emit error message","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create an group that will be displayed as expanded","Create a group that will be displayed as collapsed","End the current group (if any)","Emit info message","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Emit log message","Creates a new Console struct.","Prints the given data","Emit table if tabular data is supported","Create a timer with given label","End the timer with the given label","Log time","","Emit a trace message","","","","","","","","","","Emit a warning","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a new class (if already exists, does nothing)","","","","","Check if class name exists","","","","Returns the argument unchanged.","Initialize a class from a class string with …","Calls <code>U::from(self)</code>.","Check if a class is active. Returns false if class doesn’…","Check if any classes are present","Count the number of classes (active or inactive) assigned …","Initialise a new (empty) ElementClass","Remove a class (does nothing if not exists)","Set explicitly if a class is active or not. Does nothing …","","Toggle a class active/inactive. Does nothing if class doesn…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","We are certain to use this encoding","","","Encoding defines the way the buffer stream is read, as …","","HTML(5) input stream structure","","Seek from the current stream position","Seek (backwards) from the end of the stream","","Seek from the start of the stream","","This encoding might be the one we need","Stream is of UTF8 characters","","","","","","","","","","","","","","","","","","","How confident are we that this is the correct encoding?","","Detect the given encoding from stream analysis","Current encoding","Returns true when the stream pointer is at the end of the …","","","","","","","","","Sets the encoding for this stream, and decodes the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","If all things are ok, both buffer and u8_buffer should …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true when the encoding encountered is defined as …","","","","Length (in chars) of the buffer","","Create a new default empty input stream","Create a new position","","Current positions","Populates the current buffer with the contents of given …","Populates the current buffer with the contents of the …","Reset the stream reader back to the start","Seek explicit offset in the stream (based on chars)","Set the given confidence of the input stream encoding","Changes the encoding and if necessary, decodes the u8 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Node that resembles a DOM node","Different type of node data","Id used to identify a node","","Different types of nodes","","","","","","","","","","","","","","","","","","","children of the node","CSS classes (only relevant for NodeType::Element, …","","","","","","","actual data of the node","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get named ID. If not present or type is not Element, …","Check if node has a named ID","","ID of the node, 0 is always the root / document node","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the given node is a “formatting” node","","","Returns true if the given node is “special” node based …","","name of the node, or empty when it’s not a tag","Named ID of the node, from the “id” attribute on an …","namespace of the node","Create a new comment node","Create a new document node","Create a new element node with the given name and …","Create a new text node","","parent of the node, if any","","","Set named ID (only applies to Element type, does nothing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","When we talk about nodes, there are 3 contexts to consider:","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Fetches a node by id or returns None when no node with …","Fetches a mutable node by id or returns None when no node …","Fetches a node by named id (string) or returns None when …","Fetches a mutable node by named id (string) or returns …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Print a node and all its children in a tree-like structure","","","Set a new named ID on a node (also updates the underlying …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,6,0,6,6,6,6,6,6,0,6,6,6,6,6,0,0,6,6,6,6,1,11,1,6,11,1,6,9,1,1,1,1,1,1,9,1,6,6,11,1,6,1,1,1,1,1,11,1,6,1,1,9,1,1,1,1,6,1,11,1,6,11,1,6,11,1,6,1,0,0,0,0,0,0,0,0,71,0,0,72,72,71,0,0,0,73,73,74,73,73,75,72,71,74,73,75,72,71,74,73,74,73,74,73,75,73,73,75,72,71,74,73,73,75,74,73,73,73,75,72,71,74,73,73,74,73,75,74,73,73,73,74,73,74,73,74,73,75,73,74,73,73,73,75,72,71,74,73,75,72,71,74,73,75,72,71,74,73,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,20,20,20,20,20,20,20,20,20,20,18,20,20,21,18,20,21,18,21,18,21,18,21,18,21,21,20,21,18,18,20,21,18,21,21,18,21,21,18,20,21,18,20,21,18,20,21,18,25,26,0,0,0,23,0,0,29,29,0,29,23,26,25,23,24,29,25,26,19,23,24,29,25,26,19,23,19,23,19,23,19,24,24,24,24,24,25,26,19,23,19,19,23,23,24,24,29,25,26,19,23,24,24,24,29,25,26,19,23,24,23,23,23,24,19,24,19,19,24,24,24,24,24,24,24,24,19,23,19,23,24,29,25,26,19,23,24,29,25,26,19,23,24,29,25,26,19,23,23,23,36,33,36,33,36,33,0,0,0,0,0,0,0,0,34,0,0,0,0,36,33,0,0,0,36,33,34,35,36,33,34,35,35,35,33,34,35,33,34,35,35,34,34,36,33,34,35,34,36,33,34,34,35,36,33,34,34,35,35,35,34,35,36,33,34,35,35,34,34,35,35,35,35,35,35,35,35,35,34,35,34,34,35,33,34,35,34,36,33,34,35,36,33,34,35,36,33,34,35,76,35,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,40,40,40,40,40,40,40,40,40,40,40,40,40,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,43,43,0,43,43,43,43,43,43,43,43,43,0,0,47,47,46,46,46,47,46,47,47,47,46,46,47,46,47,46,47,46,46,46,46,46,46,47,46,46,46,46,46,47,46,46,47,46,47,46,47,0,0,0,0,0,0,0,0,0,48,50,48,50,48,48,48,48,48,48,48,48,50,48,48,48,50,48,50,50,48,48,48,0,48,48,48,0,48,48,50,48,50,48,50,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,53,53,0,55,45,55,45,55,45,55,45,55,45,55,45,0,0,0,55,54,45,55,54,45,54,45,54,45,55,54,45,54,55,54,45,55,54,45,54,55,54,45,45,45,45,54,54,45,45,55,54,45,55,54,45,55,54,45,77,45,54,78,79,80,78,79,80,78,79,80,80,81,82,0,0,0,0,0,0,56,57,58,59,56,57,58,59,56,57,56,58,59,56,58,59,56,59,59,58,59,56,56,58,59,56,56,58,59,56,56,0,0,0,58,59,56,57,58,59,56,0,56,56,57,58,59,56,56,59,56,58,59,56,58,58,59,56,56,57,58,59,56,57,58,59,56,57,58,59,56,0,66,66,66,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,[4,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[1,5]],[[1,5]],[[1,[4,[3]]]],[[1,3,[4,[5]]]],[[1,[4,[3]]]],[[]],[[1,[4,[3]]]],[[6,7],8],[[6,7],8],[[]],[[]],[[]],[1,[[10,[9]]]],[[1,[4,[3]]]],[[1,[4,[3]]]],[1,[[12,[11]]]],[[1,[4,[3]]]],[[]],[[]],[[]],[[1,[4,[3]]]],[[[10,[9]]],1],[[6,[4,[3]],[4,[5]]]],[[1,13,[4,[5]]]],[[1,5]],[[1,5]],[[1,5,[4,[3]]]],[[],13],[[1,[4,[3]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[1,[4,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[16,5]],[[]],[[]],[16,16],[[]],[[16,5],2],[[],16],[[16,16],2],[[16,7],8],[[]],[5,16],[[]],[[16,5],2],[16,2],[16,17],[[],16],[[16,5]],[[16,5,2]],[[]],[[16,5]],[[],14],[[],14],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,19,5]],[20,5],[[]],[[]],[[]],[[]],[[]],[[]],[21,21],[18,18],[[]],[[]],0,[[],18],[[21,21],2],[[21,7],8],[[]],[[]],[[]],[18,[[22,[21]]]],[[]],[[]],[[]],0,0,[[],18],0,[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,19],[23,23],[[]],[[]],0,0,[[],24],[24],0,[24,2],[[25,25],2],[[26,26],2],[[19,19],2],[[23,23],2],[[19,7],8],[[19,7],8],[[23,7],8],[[23,7],8],[[24,25]],[[]],[[]],[[]],[[]],[[]],[[]],[24,19],0,[[]],[[]],[[]],[[]],[[]],[[]],[24,2],[23,2],[23,2],[23,2],0,0,[[],24],[[17,17,17],19],0,0,[[24,27,[12,[25]]],28],[[24,5,[12,[25]]]],[24],[[24,29,30]],[[24,26]],[[24,25]],[24,17],[[]],[[]],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[23,31],[23,32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[33,33],[34,34],[35,35],[[]],[[]],[[]],0,[[],34],[[],34],[[36,36],2],[[33,33],2],[[34,34],2],[[35,35],2],[[],2],[[36,7],8],[[33,7],8],[[34,7],8],[[34,7],8],[[35,7],8],[[]],[[]],[[]],[17,34],[[]],[35,[[12,[13]]]],[35,2],[[34,37]],0,[[]],[[]],[[]],[[]],[35,2],[34,2],[34,2],[35,2],[[35,35],2],0,0,0,[5,35],[[],35],[[5,[38,[13,13]],5],35],[5,35],[34,34],0,[34,34],[[],34],[[35,5]],[[]],[[]],[[]],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],36],[35,36],0,0,0,0,0,[[]],[[]],[39,39],[[]],[[],39],[[39,39],2],[[39,7],8],[[]],[[]],[[]],[[],14],[[],14],[[],15],[39,5],0,[[]],[[]],[40,40],[[]],[[],40],[[40,40],2],[[40,7],8],[[]],[[]],[[]],[[],14],[[],14],[[],15],0,[[]],[[]],[41,41],[[]],[[],41],[[41,41],2],[[41,7],8],[[]],[[]],[41,5],[[]],[[],14],[[],14],[[],15],0,[[]],[[]],[42,42],[[]],[[],42],[[42,42],2],[[42,7],8],[[]],[[]],[[]],[[],14],[[],14],[[],15],[42,5],0,[[]],[[]],0,[[]],[43,[[22,[21]]]],[[]],[24,43],[43,44],0,[[],14],[[],14],[[],15],0,0,0,0,[[46,35,34],34],[[46,34,34]],[[]],[[]],[[]],[[]],[47,47],[[]],[[],46],0,[[47,47],2],[[46,7],8],[[47,7],8],[[]],[[]],[[46,34],[[12,[35]]]],[[46,34],[[12,[35]]]],[[46,5],[[12,[35]]]],[[46,5],[[12,[35]]]],[46,35],[[]],[[]],[[],46],[[46,35,13,2,7]],0,[[46,34,34]],[[46,34,5]],[[]],[[],13],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[48,[12,[23]],2]],0,0,0,0,0,0,[[]],[[]],[48,5],[48,[[49,[18]]]],[48,2],0,[[]],[[]],0,0,[[24,[12,[50]],[52,[[51,[18]]]]],48],[48,[[44,[45]]]],0,0,0,0,0,0,[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[53,53],[[]],[[53,7],8],[[]],[[]],[[]],[[],14],[[],14],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[54,54],[45,45],[[]],[[]],[[55,55],2],[[54,54],2],[[45,45],2],[[],2],[[55,7],8],[[54,7],8],[[45,7],8],[[]],[[]],[[]],[[54,37]],[[]],[[]],[[]],[45,2],[45,2],[45,2],0,[[]],[[]],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],55],[45,55],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,48],[56,[[22,[57]]]],[58,58],[59,59],[56,56],[[]],[[]],[[]],0,0,[[],58],[[],59],[[],56],0,[60,[[14,[58]]]],[60,[[14,[59]]]],[60,[[14,[56]]]],0,[[58,58],2],[[59,59],2],[[56,56],2],0,[5,[[14,[58,61]]]],[[[63,[62]]],[[14,[58,61]]]],[[],64],[[58,7],8],[[59,7],8],[[56,7],8],[[]],[[]],[[]],[[]],[5,13],0,0,[[]],[[]],[[]],[[]],0,0,0,[[58,65],14],[[59,65],14],[[56,65],14],0,[[]],[[]],[[]],[56],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],0,0,0,0,0,0,[[]],[[]],[[66,7],8],[[66,7],8],[67,66],[[[10,[68]]],66],[[]],[69,66],[[]],[66,[[12,[70]]]],[[],13],[[],14],[[],14],[[],15]],"c":[],"p":[[3,"Console"],[15,"bool"],[8,"Display"],[15,"slice"],[15,"str"],[4,"LogLevel"],[3,"Formatter"],[6,"Result"],[8,"Printer"],[3,"Box"],[3,"Group"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"ElementClass"],[15,"usize"],[3,"ErrorLogger"],[3,"Position"],[4,"ParserError"],[3,"ParseError"],[3,"Vec"],[4,"Element"],[3,"InputStream"],[4,"Encoding"],[4,"Confidence"],[3,"File"],[6,"Result"],[4,"SeekMode"],[15,"isize"],[15,"u32"],[15,"char"],[4,"NodeData"],[3,"NodeId"],[3,"Node"],[4,"NodeType"],[8,"Hasher"],[3,"HashMap"],[3,"CommentData"],[3,"DocumentData"],[3,"ElementData"],[3,"TextData"],[3,"Html5Parser"],[6,"Result"],[4,"Token"],[3,"Document"],[4,"DocumentType"],[3,"Tokenizer"],[3,"Ref"],[3,"Options"],[3,"RefCell"],[3,"Rc"],[4,"State"],[3,"Attribute"],[4,"TokenType"],[3,"Test"],[3,"TokenizerBuilder"],[3,"Root"],[3,"Error"],[8,"Deserializer"],[3,"Error"],[3,"Path"],[8,"AsRef"],[8,"Iterator"],[8,"Serializer"],[4,"Error"],[3,"Error"],[4,"Error"],[3,"FromUtf8Error"],[8,"Error"],[4,"ShadowRootMode"],[4,"SlotAssignmentMode"],[3,"HtmlElement"],[3,"Element"],[3,"ShadowRoot"],[8,"NodeTrait"],[8,"TokenTrait"],[13,"StartTagToken"],[13,"EndTagToken"],[13,"DocTypeToken"],[13,"CommentToken"],[13,"TextToken"]]},\
"gosub_parser":{"doc":"","t":"FF","n":["bail","main"],"q":[[0,"gosub_parser"]],"d":["",""],"i":[0,0],"f":[[1,2],[[],3]],"c":[],"p":[[15,"str"],[15,"never"],[6,"Result"]]},\
"parser_test":{"doc":"","t":"DENNNDDMLLLLLLLLMMMMMLLMMMMLLLLLLLLMMFFFFFFMMLLLLLLLLLLLL","n":["Error","ErrorResult","Failure","PositionFailure","Success","Test","TestResults","assertions","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","code","col","data","document","document_fragment","eq","eq","errors","failed","failed_position","file_path","from","from","from","from","into","into","into","into","line","line","main","match_document_tree","match_error","match_node","read_tests","run_tree_test","succeeded","tests","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"parser_test"]],"d":["","","Didn’t find the error (not even with incorrect position)","Found the error, but on an incorrect position","Found the correct error","","","Number of assertions (different combinations of …","","","","","","","","","","","input stream","document tree","fragment","","","errors","How many failed assertions","How many failed assertions where position is not correct","Filename of the test","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Line number of the test","","","","","","Read given tests file and extract all test data","","How many succeeded assertions","Number of tests (as defined in the suite)","","","","","","","","","","","",""],"i":[0,0,1,1,1,0,0,14,14,13,1,3,14,13,1,3,3,3,13,13,13,1,3,13,14,14,13,14,13,1,3,14,13,1,3,13,3,0,0,0,0,0,0,14,14,14,13,1,3,14,13,1,3,14,13,1,3],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[1,1],2],[[3,3],2],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],4],[[5,[7,[6]]],2],[[3,3],1],[[8,9,9,5,[7,[6]]],[[11,[10]]]],[12,[[4,[[7,[13]]]]]],[[10,13,14]],0,0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16]],"c":[],"p":[[4,"ErrorResult"],[15,"bool"],[3,"Error"],[6,"Result"],[3,"Document"],[3,"String"],[3,"Vec"],[3,"NodeId"],[15,"isize"],[15,"usize"],[4,"Option"],[3,"PathBuf"],[3,"Test"],[3,"TestResults"],[4,"Result"],[3,"TypeId"]]},\
"test_user_agent":{"doc":"","t":"FFFF","n":["display_node","get_node","get_node_by_path","main"],"q":[[0,"test_user_agent"]],"d":["","","",""],"i":[0,0,0,0],"f":[[[1,2]],[[1,2,3],[[4,[2]]]],[[1,[5,[3]]],[[4,[2]]]],[[],6]],"c":[],"p":[[3,"Document"],[3,"Node"],[15,"str"],[4,"Option"],[3,"Vec"],[6,"Result"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
